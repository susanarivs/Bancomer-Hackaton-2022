// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using AltergoAPI.Nss.Core.Models;
//
//    var vgResults = VgResults.FromJson(jsonString);

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace AltergoAPI.Nss.Core.Models
{
    public partial class VgResults
    {
        //[JsonProperty("nss", NullValueHandling = NullValueHandling.Ignore)]
        //public string Nss { get; set; }

        [JsonProperty("conDerechoInc", NullValueHandling = NullValueHandling.Ignore)]
        public string ConDerechoInc { get; set; }

        [JsonProperty("conDerechoSm", NullValueHandling = NullValueHandling.Ignore)]
        public string ConDerechoSm { get; set; }

        [JsonProperty("vigenteHasta", NullValueHandling = NullValueHandling.Ignore)]
        public string VigenteHasta { get; set; }
    }

    public partial class VgResults
    {
        public static VgResults FromJson(string json) => JsonConvert.DeserializeObject<VgResults>(json, VgConverter.Settings);
    }

    public static class VgSerialize
    {
        public static string ToJson(this VgResults self) => JsonConvert.SerializeObject(self, VgConverter.Settings);
    }

    internal static class VgConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}