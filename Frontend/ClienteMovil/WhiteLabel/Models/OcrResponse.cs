// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using WhiteLabel.Models;
//
//    var ocrResponse = OcrResponse.FromJson(jsonString);

namespace WhiteLabel.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class OcrResponse
    {
        [JsonProperty("lado", NullValueHandling = NullValueHandling.Ignore)]
        public string Lado { get; set; }

        [JsonProperty("nombres", NullValueHandling = NullValueHandling.Ignore)]
        public string Nombres { get; set; }

        [JsonProperty("apellidoPaterno", NullValueHandling = NullValueHandling.Ignore)]
        public string ApellidoPaterno { get; set; }

        [JsonProperty("apellidoMaterno", NullValueHandling = NullValueHandling.Ignore)]
        public string ApellidoMaterno { get; set; }

        [JsonProperty("domicilio", NullValueHandling = NullValueHandling.Ignore)]
        public string Domicilio { get; set; }

        [JsonProperty("claveElector", NullValueHandling = NullValueHandling.Ignore)]
        public string ClaveElector { get; set; }

        [JsonProperty("curp", NullValueHandling = NullValueHandling.Ignore)]
        public string Curp { get; set; }

        [JsonProperty("fechaNacimiento")]
        public object FechaNacimiento { get; set; }

        [JsonProperty("vigencia", NullValueHandling = NullValueHandling.Ignore)]
        public string Vigencia { get; set; }

        [JsonProperty("emision", NullValueHandling = NullValueHandling.Ignore)]
        public string Emision { get; set; }

        [JsonProperty("genero")]
        public object Genero { get; set; }

        [JsonProperty("localidad", NullValueHandling = NullValueHandling.Ignore)]
        public string Localidad { get; set; }

        [JsonProperty("seccion", NullValueHandling = NullValueHandling.Ignore)]
        public string Seccion { get; set; }

        [JsonProperty("municipio", NullValueHandling = NullValueHandling.Ignore)]
        public string Municipio { get; set; }

        [JsonProperty("anioRegistro", NullValueHandling = NullValueHandling.Ignore)]
        public string AnioRegistro { get; set; }

        [JsonProperty("estado", NullValueHandling = NullValueHandling.Ignore)]
        public string Estado { get; set; }
    }

    public partial class OcrResponse
    {
        public static OcrResponse FromJson(string json) => JsonConvert.DeserializeObject<OcrResponse>(json, WhiteLabel.Models.ConverterOcrResponse.Settings);
    }

    public static class SerializeOcrResponse
    {
        public static string ToJson(this OcrResponse self) => JsonConvert.SerializeObject(self, WhiteLabel.Models.ConverterOcrResponse.Settings);
    }

    internal static class ConverterOcrResponse
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
