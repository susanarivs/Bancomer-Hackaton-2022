// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using WhiteLabel.Models;
//
//    var ocrRequest = OcrRequest.FromJson(jsonString);

namespace WhiteLabel.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class OcrRequest
    {
        [JsonProperty("imagenBase64", NullValueHandling = NullValueHandling.Ignore)]
        public string ImagenBase64 { get; set; }
    }

    public partial class OcrRequest
    {
        public static OcrRequest FromJson(string json) => JsonConvert.DeserializeObject<OcrRequest>(json, WhiteLabel.Models.ConverterOcrRequest.Settings);
    }

    public static class SerializeOcrRequest
    {
        public static string ToJson(this OcrRequest self) => JsonConvert.SerializeObject(self, WhiteLabel.Models.ConverterOcrRequest.Settings);
    }

    internal static class ConverterOcrRequest
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
